plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id 'groovy'
    id "application"
    //id "cpp"
}
//apply plugin: 'cpp'
mainClassName = "galecino.Application"
//mainClassName = "TensorFlowExample"
def SYS_INCLUDE_DIR = this.properties['system.include.dir']
def SYS_LOCAL_INCLUDE_DIR = this.properties['system.local.include.dir']
def JNI_INCLUDE_DIR = this.properties['jni.include.dir']
def JNI_LIB_DIR = this.properties['jni.lib.dir']

println "Using system include directory: " + SYS_INCLUDE_DIR
println "Using system local include directory: " + SYS_LOCAL_INCLUDE_DIR
println "Using JNI include directory: " + JNI_INCLUDE_DIR
println "Using JNI lib directory: " + JNI_LIB_DIR
jar {
    manifest {
        attributes 'Main-Class': "galecino.Application"
    }
}
repositories {

    mavenLocal()
    mavenCentral()
    maven { url  "https://dl.bintray.com/vanderfox/JRPiCam" }
    // required if using runtime-green-lightning below
//    maven { url 'https://repository-pronghorn.forge.cloudbees.com/release' }
}
dependencies {
    //Properties props = new Properties()
    //new File("gradle.properties").withReader { props.load(it) }
    compileOnly "io.micronaut:inject-groovy:${particleProjectVersion}"
    compile "io.micronaut:runtime-groovy:${particleProjectVersion}"
    compile "hopding.jrpicam:jrpicam:1.1.1"
    // use one of these servers, not both...
    compile "io.micronaut:http-server-netty:${particleProjectVersion}"
    compile "io.micronaut.configuration:hibernate-gorm:${particleProjectVersion}"
    compile "com.pi4j:pi4j-core:1.1"
    compile "com.pi4j:pi4j-gpio-extension:1.1"
    compile "com.pi4j:pi4j-device:1.1"
    compile fileTree(dir: '../libs', include: '*.jar')
    compile "org.ow2.asm:asm:5.2"
    compile "org.ow2.asm:asm-commons:5.2"
    //compile "org.bytedeco.javacpp-presets:tensorflow:1.5.0-1.4"
    compile "org.tensorflow:tensorflow:1.6.0"

    runtime 'org.apache.tomcat:tomcat-jdbc:8.0.44'
    runtime 'com.h2database:h2:1.4.196'

    runtime "ch.qos.logback:logback-classic:1.2.3"
}
shadowJar {
    mergeServiceFiles()
}
